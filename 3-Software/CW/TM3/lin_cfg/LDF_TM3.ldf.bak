/****************************************************************************/
/*                                                                          */
/* Description: LIN Description file created using Vector's LIN File Editor */
/* Created:     xx.xx.xxxx                                                  */
/* Author:                                                                  */
/* Version:     0.1                                                         */
/* Project:                                                                 */
/*                                                                          */
/****************************************************************************/

// Global Definitions
LIN_description_file;
LIN_protocol_version = "2.1";
LIN_language_version = "2.1";
LIN_speed = 19.2 kbps; // baudrate (1.0-20.0) 
// End of Global Definitions

Nodes // Nodes Definition
{
  Master:
    TM3Ecu,  	// master node name
    5 ms, 		// time base (real)
    0.5 ms;    	// jitter (real)
      
  Slaves:
    TM3Sensor; 	// slave node names

} // End of Nodes Definition

Signals // Signals Definition
{
  // Scalar Signal
  SensorError: 			// signal name 
 	1,         			// signal size in bits (1-16)
  	0x00,          		// init raw value (integer)  
  	TM3Sensor,    		// publisher node name
  	TM3Ecu;				// list of subscribing node names
  SensorErrorCode: 		// signal name 
 	8,         			// signal size in bits (1-16)
  	0x00,          		// init raw value (integer)  
  	TM3Sensor,    		// publisher node name
  	TM3Ecu;				// list of subscribing node names
  SensorErrorValue: 	// signal name 
 	8,         			// signal size in bits (1-16)
  	0x00,          		// init raw value (integer)  
  	TM3Sensor,    		// publisher node name
  	TM3Ecu;				// list of subscribing node names
  // End of Scalar Signal

  // Byte Array Signal
  Humidity:         	// signal name
     16,             	// signal size in bits (8-64)
     {0x0, 0x0},     	// init raw value (integer) for each byte  
     TM3Sensor,      	// publisher node name
     TM3Ecu; 			// list of subscribing node names
  LuminosityA:     
    16,            
    {0x0, 0x0},    
    TM3Sensor,     
    TM3Ecu; 		
  LuminosityB:     
    16,            
    {0x0, 0x0},    
    TM3Sensor,     
    TM3Ecu; 		
   Temperature:         // signal name
     16,             	// signal size in bits (8-64)
     {0x0, 0x0},     	// init raw value (integer) for each byte  
     TM3Sensor,      	// publisher node name
     TM3Ecu; 			// list of subscribing node names
  // End of Byte Array Signal
} // End of Signals Definition

Diagnostic_signals // Diagnostic Signals Definition (optional)
{
  // MasterReq Reserved Signals 
  MasterReqB0: 8, 0; // signal name: signal size, signal offset;
  MasterReqB1: 8, 0;
  MasterReqB2: 8, 0;
  MasterReqB3: 8, 0;
  MasterReqB4: 8, 0;
  MasterReqB5: 8, 0;
  MasterReqB6: 8, 0;
  MasterReqB7: 8, 0;
        // End of MasterReq Reserved Signals

  // SlaveResp Reserved Signals
  SlaveRespB0: 8, 0; // signal name: signal size, signal offset;
  SlaveRespB1: 8, 0;
  SlaveRespB2: 8, 0;
  SlaveRespB3: 8, 0;
  SlaveRespB4: 8, 0;
  SlaveRespB5: 8, 0;
  SlaveRespB6: 8, 0;
  SlaveRespB7: 8, 0; 
  // End of SlaveResp Reserved Signals

} // End of Diagnostic Signals Definition

Frames // Unconditional Frames Definition
{
  Humidity_f:     	// frame name
    0x05,   		// frame id (0-59 or 62)
    TM3Sensor,  	// publisher node
    2 				// frame size in bytes (1-8)
    {
      // list of signals carried by this frame
      Humidity, 0; // signal name with LSB offset in bits
    }
  LuminosityA_f:    // frame name
    0x0A,   		// frame id (0-59 or 62)
    TM3Sensor,  	// publisher node
    2 				// frame size in bytes (1-8)
    {
      // list of signals carried by this frame
      LuminosityA, 0; // signal name with LSB offset in bits
    } 
  LuminosityB_f:    // frame name
    0x12,   		// frame id (0-59 or 62)
    TM3Sensor,  	// publisher node
    2 				// frame size in bytes (1-8)
    {
      // list of signals carried by this frame
      LuminosityB, 0; // signal name with LSB offset in bits
    } 
   Temperature_f:    // frame name
    0x14,   		// frame id (0-59 or 62)
    TM3Sensor,  	// publisher node
    2 				// frame size in bytes (1-8)
    {
      // list of signals carried by this frame
      Temperature, 0; // signal name with LSB offset in bits
    } 
   TestSensor_f:    // frame name
    0x16,   		// frame id (0-59 or 62)
    TM3Sensor,  	// publisher node
    3 				// frame size in bytes (1-8)
    {
      // list of signals carried by this frame
      SensorError, 0; // signal name with LSB offset in bits
 	  SensorErrorCode , 8;
      SensorErrorValue , 16;
    } 
              
} // End of Unconditional Frames Definition

//Sporadic_frames // Sporadic Frames Definition (optional)
//{
//  // Sporadic Frame
//  <sporadic_frame_name>:            // sporadic frame name
//    <frame_name1>, <frame_name2>; // list of associated frame names
//  // End of Sporadic Frame
//
//} // End of Sporadic Frames Definition

//Event_triggered_frames // Event Triggered Frames Definition (optional)
//{
//  // Event Triggered Frame
//  <et_frame_name>:                  // event triggered frame name
//    <schedule_table_name>,        // name of schedule table to resolve collisions
//    <et_frame_id>,                // event triggered frame id (0-59) 
//    <frame_name1>, <frame_name2>; // list of associated frame names
//  // End of Event Triggered Frame
//
//} // End of Event Triggered Frames Definition

Diagnostic_frames // Diagnostic Frame Definition (optional)
{
  MasterReq: 60 // reserved frame name and frame identifier
  {
    MasterReqB0, 0; // diagnostic signal name, signal offset
    MasterReqB1, 8;
    MasterReqB2, 16;
    MasterReqB3, 24;
    MasterReqB4, 32;
    MasterReqB5, 40;
    MasterReqB6, 48;
    MasterReqB7, 56;
  }

  SlaveResp: 61 // reserved frame name and frame identifier
  {
    SlaveRespB0, 0; // diagnostic signal name, signal offset
    SlaveRespB1, 8;
    SlaveRespB2, 16;
    SlaveRespB3, 24;
    SlaveRespB4, 32;
    SlaveRespB5, 40;
    SlaveRespB6, 48;
    SlaveRespB7, 56;
  }
} // End of Diagnostic Frame Definition

Node_attributes // Node Attributes Definition
{
  // Node Attributes
  TM3Sensor 			// node name
  {
    LIN_protocol = "2.1";
    configured_NAD = 0x05;  // configured NAD of node (1-125)
    initial_NAD = 0x05;     // initial NAD of node (1-125)
    product_id = 
      0x1E,               	// supplier_id (0-0x7FFE)
      0x02,               	// function_id (0-0xFFFE)
      0x01;                 // variant (0-0xFF)
    response_error = SensorError;  		// name of 1 bit error signal
    fault_state_signals =            // diagnostic class I and II only 
      SensorErrorCode, SensorErrorValue // list of signal names
    P2_min = 50 ms;       // min. time (real) between MasterReq and SlaveResp  (50-500)
    ST_min = 0 ms;       // min. time (real) between consecutive SlaveResps 
    N_As_timeout = 1000 ms;   // time for transmission of MasterReq or SlaveResp
    N_Cr_timeout = 1000 ms;   // time until reception of the next consequtive SlaveResp
    configurable_frames 
    {
      // list of configurable frames
      Humidity_f; // frame name
      LuminosityA_f;
      LuminosityB_f;
      Temperature_f;
      TestSensor_f;
    }
  } // End of Node Attributes

} // End of Node Attributes Definition

Schedule_tables // Schedule Table Definition
{
  // Hint: Use the LIN Schedule Designer from Vector to create/edit this section

  // Schedule Table
  Table // schedule table name
  {
    // list of slots
      FreeFormat {160, 3, 34, 6, 113, 255, 255, 255}     delay 10 ms;
      SlaveResp                                          delay 20 ms;
      FreeFormat {160, 3, 34, 6, 113, 255, 255, 255}     delay 20 ms;
      SlaveResp                                          delay 10 ms;
      FreeFormat {160, 225, 0, 0, 0, 0, 0, 0}            delay 10 ms;
      SlaveResp                                          delay 20 ms;
  } // End of Schedule Table

} // End of Schedule Table Definition


